// Generated by CoffeeScript 1.12.5

/*
multi line
comments
 */

(function() {
  var condition, count, countSingle, div, end, front, i, j, k, key, multiLineString, n, name, numbers, person, print, printTitle, q, r, ref, result, sayHello, sentence, singleLineString, someIntegers, square, squareIntegers, value,
    slice = [].slice;

  printTitle = function(title) {
    return console.log("---------" + title + "----------");
  };

  print = function(x) {
    return console.log(x);
  };


  /* =================== */

  printTitle("functions");

  square = function(x) {
    return x * x;
  };

  print(square(5));


  /* =================== */

  printTitle("function with default param");

  sayHello = function(name) {
    if (name == null) {
      name = "Yitian";
    }
    return print(name);
  };

  sayHello();

  sayHello("zhang3");


  /* =================== */

  printTitle("strings");

  singleLineString = "Some ...";

  multiLineString = "Some more\nString ...";

  print(singleLineString);

  print(multiLineString);

  name = "Yitian";

  sentence = "Hello " + name;

  print(name);

  print(sentence);


  /* =================== */

  printTitle("arrays");

  someIntegers = [1, 2, 3, 4, 5];

  print(someIntegers);


  /* =================== */

  printTitle("array comprehensions");

  squareIntegers = [
    (function() {
      var j, len, results;
      results = [];
      for (j = 0, len = someIntegers.length; j < len; j++) {
        i = someIntegers[j];
        results.push(i * i);
      }
      return results;
    })()
  ];

  print(squareIntegers);


  /* =================== */

  printTitle("objects");

  person = {
    name: "Yitian",
    age: 24,
    country: "China"
  };

  print(person);


  /* =================== */

  printTitle("if-else");

  condition = true;

  if (condition) {
    result = 100;
  }

  if (condition) {
    result = "Condition is True";
  } else {
    result = "Condition is False";
  }

  name = condition ? "True" : "False";

  print(name);


  /* =================== */

  printTitle("for loops");

  count = function() {
    var j, len, numbers, results;
    numbers = 1 <= arguments.length ? slice.call(arguments, 0) : [];
    results = [];
    for (j = 0, len = numbers.length; j < len; j++) {
      i = numbers[j];
      results.push(print(i));
    }
    return results;
  };

  count(1, 2, 3);


  /* =================== */

  printTitle("while loops");

  i = 0;

  while (i <= 5) {
    i++;
  }

  print(i);


  /* =================== */

  printTitle("ranges");

  countSingle = function(x) {
    return print(x);
  };

  for (n = j = 0; j <= 3; n = ++j) {
    countSingle(n);
  }

  for (n = k = 0; k <= 5; n = k += 2) {
    countSingle(n);
  }

  person = {
    name: 'yitian',
    age: 34,
    gender: 'man'
  };

  for (key in person) {
    value = person[key];
    print("key is " + key + ",value is " + value);
  }


  /* =================== */

  printTitle("array slicing");

  numbers = [1, 2, 3, 45, 6, 7, 8, 9];

  front = numbers.slice(1, 4);

  end = numbers.slice(-3);

  print(front);

  print(end);


  /* =================== */

  printTitle("destruction");

  div = function(a, b) {
    var quotient, remain;
    quotient = Math.floor(a / b);
    remain = a % b;
    return [quotient, remain];
  };

  ref = div(5, 3), q = ref[0], r = ref[1];

  print("quotient=" + q + ",remain=" + r);

}).call(this);
